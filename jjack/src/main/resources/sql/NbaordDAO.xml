<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	
<!-- namespace는 연결할 DAO 인터페이스경로.클래스명 -->	
<mapper namespace="com.jjack.web.nboard.dao.NboardDAO">




<!-- 공지사항 글쓰기 질의 명령  조회수 증가는 아직 해결 못함 -->
<!-- 아이디 요소는 그 추상함수이름과 같게 해준다.  -->

<insert id="nBoardInsert" parameterType="nboardvo"> 
			INSERT 
			INTO 
				TB_Notice (N_NO, N_DATE, N_TITLE, N_CONTENTS, N_HITS, N_ISSHOW)
			VALUES (
					(SELECT 
						    NVL(MAX(n_no),0)+1
					FROM
						TB_Notice),SYSDATE,#{ntitle},#{ncontents,jdbcType=CLOB},'0' , 'Y')
	</insert>

	<!-- 게시물 목록보여주기 질의명령 -->
	<select id="nboardList" resultType="nboardvo" parameterType="hashMap">
SELECT
	realTotal.nno AS nno, realTotal.nday AS nday, realTotal.ntitle AS ntitle, realTotal.ncontents AS ncontents, realTotal.nhits AS nhits
FROM
			(SELECT rownum AS rno,
						total.nno AS nno, total.nday AS nday, total.ntitle AS ntitle, total.ncontents AS ncontents, total.nhits AS nhits
			FROM
						(SELECT 
								n_no AS nno, n_date AS nday, n_title AS ntitle, n_contents AS ncontents, N_HITS AS nhits
						FROM
							TB_Notice
						WHERE
							n_isshow='Y'
						ORDER BY
							n_no DESC) total) realTotal
WHERE
	rno BETWEEN #{start} AND #{end}
	</select>
	
	
	
	
	
	
	
	<!-- 이미 본 글 번호를 조회할 질의 명령 -->
	<!-- 즉, 아이디를 넣으면 그 아이디와 그 아이디가 본 게시물의 번호가 결과로 튀어 나온다. -->
<resultMap id="clobMap" type="hashMap">
	<result property="nno" column="bh_No" jdbcType="CLOB" javaType="java.lang.String"></result>
</resultMap>
<select id="getHitNo" parameterType="string" resultMap="clobMap">
	SELECT
		bh_User,
		bh_No
	From
		nboardhit
	WHERE
		bh_User=#{user} 
</select>



<!-- 기존 방문한 사람을 위한 이미 본 글번호 수정 질의 명령 -->
	<update id="updateHitNO"	parameterType="hashMap">
		UPDATE
			nboardhit
		SET
			bh_No = #{no}
		WHERE
			bh_User = #{user}
	</update>


<!-- 처음 방문한 사람을 위한 이미 본 글번호 등록 질의 명령 -->
<insert id="insertHitNo" parameterType="hashMap" >
		INSERT
		INTO
			nboardhit
		VALUES(#{user}, #{nno})
</insert>

<!-- 실제 조회수 증가 질의 등록 -->
<update id="updateHit" parameterType="int">
	UPDATE
		TB_Notice
	SET
		N_HITS=N_HITS+1
	WHERE
		N_NO=#{nno}
</update> 


<!-- 공지사항 게시판 상세보기 질의명령 -->
<!-- 그 게시물 번호를 이용해서 그 내용을 뽑아내자.-->
<select id="nBoardView"  resultType="nboardvo" parameterType="int">
	SELECT 
		n_no AS nno,
		n_date AS nday,
		n_title AS ntitle,
		n_contents AS ncontents,
		n_hits AS nhits
	FROM
		TB_Notice
	WHERE
		n_no =#{nno}
</select>

<!-- 페이징 처리를 위한 총 레코드 갯수 구하기 질의명령 -->
<select id="getTotal" resultType="int">
	SELECT 
		COUNT(*)
	FROM
		TB_Notice
	WHERE
		n_IsShow='Y'
</select>


<!-- 공지사항 게시판 삭제하기 질의문 -->
<update id="nBoardDelete" parameterType="int" >
UPDATE 
	TB_Notice
SET
    N_ISSHOW='N'
WHERE
    N_NO=#{nno}
</update>

	<!-- 공지사항 게시판 수정폼 질의 명령 -->
<select id="nBoardModify" parameterType="int" resultType="nboardvo">
SELECT 
	n_contents AS ncontents,
	n_title AS ntitle,
	n_no AS nno
FROM
	TB_Notice
WHERE
	n_no=#{nno}
</select>

<!-- 공지사항 게시판 수정 실행 질의 명령 -->
<update id="nBoardModifyProc" parameterType="hashMap">
UPDATE
	TB_Notice
SET
	n_title=#{title},
	n_contents=#{contents}
WHERE
	n_no=#{nno}
</update>

<!-- 공지사항 이전글, 다음글 꺼내기 질의 명령 -->
<select id="preNext" parameterType="int" resultType="nboardvo">
SELECT
    	total.pre AS pre, total.next AS next,total.preday AS preday, total.nextday AS nextday,total.nNo AS nextNo, total.pNo AS preNo
FROM
		(SELECT
	 		n_no,N_TITLE, LAG(n_title,1,'다음글 없음') OVER(ORDER BY N_NO DESC) AS pre,
	 		         	 					LAG(n_date,1,TO_DATE('11-11-1111','MM-DD-YYYY')) OVER(ORDER BY N_NO DESC) AS preday,
	 		         	 					LAG(n_no,1,999) OVER(ORDER BY n_no DESC) AS pNo,
	 										lead(n_title,1,'이전글 없음') OVER(ORDER BY N_NO DESC) AS next,		  
                         					 lead(n_date,1,TO_DATE('11-11-1111','MM-DD-YYYY')) OVER(ORDER BY N_NO DESC) AS nextday,
                          					lead(n_no,1,999) OVER(ORDER BY n_no DESC) AS nNo             
 		FROM 
 				TB_Notice
		WHERE 
   		 		N_ISSHOW='Y'
 		ORDER BY
 				 N_NO desc) total
WHERE
    n_no=#{nno}
</select>



<!-- 공지사항 게시판 검색기능 질의 명령 |하다가 말았음|-->
<select id="nboardSearch"  resultType="nboardvo" parameterType="hashMap" >
SELECT
	n_no AS nno, n_date AS nday, n_title AS ntitle, n_contents AS ncontents
FROM 
	TB_Notice
WHERE
	n_IsShow='Y' AND
	
	
</select>
</mapper>









