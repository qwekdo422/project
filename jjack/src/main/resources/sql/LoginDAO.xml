<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	
<!-- namespace는 연결할 DAO 인터페이스경로.클래스명 -->	
<mapper namespace="com.jjack.web.login.dao.LoginDAO">

	<!-- id는 연결할 함수명 -->
	<!-- 아이디 비밀번호 확인 질의문 -->
<select id="login" resultType="int"  parameterType="hashMap">
																					<!-- 파라메터가 map계열이면 #{내용} '내용'이 키 값이 된다. -->
																					<!-- 넣을 데이터가 여러가지라서 map이나  -->
	SELECT 
		COUNT(*)                                                                   
	FROM
		tb_member
	WHERE
				m_id = #{hashid}
			AND	m_pw = #{hashpw}
</select>
<select id="logout" resultType="int" parameterType="string">
	SELECT 
		COUNT(*)                                                                   
	FROM
		tb_member
	WHERE
				m_id = #{overlap_id}
</select>

<!-- 회원번호 받는 질의문 -->
<select id="mNo" resultType="int" parameterType="string">
	SELECT 
		m_no
	FROM
		tb_member
	WHERE
		m_id=#{id}
</select>

<!-- 회원정보 수정 질의문 -->
<select id="mModify" parameterType="int" resultType="profilevo">
<!-- 회원의 m_no를 받아서 거기에 해당하는 데이터를 받아오자 -->
	SELECT 																							
		m_id AS id, m_name AS name, m_sex AS sex, m_birth AS birth, m_email AS email, m_loc AS loc
	FROM
		tb_member
	WHERE
		m_no=#{mNo}
</select>

<!-- 아이디에 해당하는 비밀번호 가져오는 질의문 -->
<select id="pW" resultType="string" parameterType="string">
	SELECT 
		m_pw
	FROM
		tb_member
	WHERE
		m_id=#{isid}
</select>

<!-- 비밀번호 일치 불일치 판별 질의문 -->
<!-- 아이디와 비밀번호가 일치하면 1을 반환한다. -->
<select id="isPw" resultType="int" parameterType="profilevo">
	SELECT 
		COUNT(*)                                                                   
	FROM
		tb_member
	WHERE
		 m_id=#{mid} and M_PW=#{mpw}
</select>

<!-- 회원정보 업데이트 질의문 -->
<update id="memberModifyProc" parameterType="profilevo">
	UPDATE
		tb_member
	SET
		m_name=#{name}, m_pw=#{newpw02},m_email=#{email}, m_loc=#{loc}
	WHERE
		m_no=#{no}
</update>

	<!-- 로그인시 권한 설정 -->
	<!-- 0 : 디폴트. 일반상태
			1 : 최신 a_cond가 4 :  전체 데이트코스 열람 가능
			2 : a_cond 8 : 짝짓기 메뉴 선택시 최종 짝선택 페이지로 연결
			3 : a_cond 8 & g_course S : 데이트코스 메뉴 선택시 솔로 코스로 연결
			4 : a_cond 9 : 후기 쓰기. 가능
			후기 쓰면 cond = 0 으로 변경 -->
	<select id="getAuth" parameterType="string" resultType="int">
		SELECT
		    MAX(auth)
		FROM
		    (SELECT
		        NVL(
		            DECODE(
		                a.a_cond, 
		                9, 4,
		                8, DECODE(g.g_course, 'S', 3, 2),
		                4, 1,
		                0
		            ), 0) AS auth,
		        m.m_id AS id
		    FROM
		        TB_Member m,
		        TB_Apply a,
		        TB_Guest g
		    WHERE
		        m.m_no=a.m_no(+)
		        AND a.a_no=g.a_no(+))
		WHERE
		    id=#{id}
		GROUP BY 
		    id
	</select>

</mapper>
